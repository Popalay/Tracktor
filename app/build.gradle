plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def appVersionCode = propOrDef("tracktor.versioncode", 1) as Integer
println("APK version code: " + appVersionCode)

ext {
    ci = System.getenv("CI") == "true"
}
println("Is CI environment: " + ci)

android {
    compileSdkVersion buildConfig.compileSdk
    defaultConfig {
        applicationId "com.popalay.tracktor"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode appVersionCode
        versionName "1.3"

        resConfigs "en"

        signingConfigs {
            debug {
                storeFile file('../release/debug.keystore')
            }
            release {
                storeFile file('../release/release.keystore')
                keyAlias "tracktor"
                storePassword envOrDef("ANDROID_RELEASE_KEYSTORE_PWD", "")
                keyPassword envOrDef("ANDROID_RELEASE_KEY_PWD", "")
            }
        }

        buildTypes {
            debug {
                signingConfig signingConfigs.debug
                versionNameSuffix "-dev"
                applicationIdSuffix ".debug"
            }

            release {
                if (ci) signingConfig signingConfigs.release else signingConfig signingConfigs.debug
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        lintOptions {
            // Disable lintVital. Not needed since lint is run on CI
            checkReleaseBuilds false
            // Allow lint to check dependencies
            checkDependencies true
            // Ignore any tests
            ignoreTestSources true

            // Lint doesn't seem to handle Kotlin int types + string format very well
            disable 'StringFormatMatches'
            // Seems to be broken in 4.0.0-alpha09 https://issuetracker.google.com/issues/148172219
            disable 'Instantiatable'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        // Don't pre-dex on CI
        preDexLibraries !ci
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion "0.1.0-dev14"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.google.android.material:material:1.1.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
}

dependencies {
    def compose_version = "0.1.0-dev14"
    implementation "androidx.ui:ui-tooling:$compose_version"
    implementation "androidx.ui:ui-layout:$compose_version"
    implementation "androidx.ui:ui-material:$compose_version"
}

dependencies {
    def workflow_version = "1.0.0-alpha.1"
    def workflow_compose_version = "0.30.0"
    implementation "com.squareup.workflow:workflow-core-jvm:$workflow_version"
    implementation "com.squareup.workflow:workflow-runtime-jvm:$workflow_version"
    if (!ci) {
        implementation "com.squareup.workflow:workflow-ui-core-compose:$workflow_compose_version"
        implementation "com.squareup.workflow:workflow-ui-compose-tooling:$workflow_compose_version"
    } else {
        implementation('com.squareup.workflow:core-compose') {
            version {
                branch = 'dev14'
            }
        }
        implementation('com.squareup.workflow:compose-tooling') {
            version {
                branch = 'dev14'
            }
        }
    }
}

dependencies {
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
}

dependencies {
    def koin_version = "2.1.6"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
}

dependencies {
    def moshi_version = "1.9.3"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
}